{"ast":null,"code":"var _jsxFileName = \"C:\\\\HomeProjects\\\\apollo-react-thinkster\\\\habit-tracker\\\\src\\\\Habit.js\";\nimport React from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { HABITS_QUERY } from \"./App\";\nconst DELETE_HABIT_MUTATION = gql`\n  mutation DELETE_HABIT_MUTATION($id: ID!) {\n    deleteHabit(id: $id) {\n      success\n    }\n  }\n`;\n\nfunction Habit({\n  habit\n}) {\n  // hooks the function\n  const [deleteHabit, {\n    error,\n    loading\n  }] = useMutation(DELETE_HABIT_MUTATION, {\n    refetchQueries: [{\n      query: HABITS_QUERY\n    }]\n  });\n  return /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, `${habit.description} (${habit.points} points)`, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => deleteHabit({\n      variables: {\n        id: habit.id\n      }\n    }),\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, habit.entries && habit.entries.map(entry => {\n    const date = new Date(entry.date).toLocaleDateString();\n    const completed = entry.completed ? \"âœ…\" : \"ðŸ˜‘\";\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: entry.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, `${date}: ${entry.notes} ${completed}`);\n  })));\n}\n\nexport default Habit;","map":{"version":3,"sources":["C:/HomeProjects/apollo-react-thinkster/habit-tracker/src/Habit.js"],"names":["React","useMutation","gql","HABITS_QUERY","DELETE_HABIT_MUTATION","Habit","habit","deleteHabit","error","loading","refetchQueries","query","description","points","variables","id","entries","map","entry","date","Date","toLocaleDateString","completed","notes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;AACA,SAASC,YAAT,QAA6B,OAA7B;AAEA,MAAMC,qBAAqB,GAAGF,GAAI;;;;;;CAAlC;;AAQA,SAASG,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AAErB;AACH,QAAM,CAACC,WAAD,EAAc;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAd,IAAoCR,WAAW,CAACG,qBAAD,EAAwB;AAC3EM,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAER;AAAT,KAAD;AAD2D,GAAxB,CAArD;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,GAAEG,KAAK,CAACM,WAAY,KAAIN,KAAK,CAACO,MAAO,UADzC,eAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE,MAAMN,WAAW,CAAC;AAAEO,MAAAA,SAAS,EAAE;AAAEC,QAAAA,EAAE,EAAET,KAAK,CAACS;AAAZ;AAAb,KAAD,CAF5B;AAGE,IAAA,QAAQ,EAAEN,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACU,OAAN,IACCV,KAAK,CAACU,OAAN,CAAcC,GAAd,CAAmBC,KAAD,IAAW;AAC3B,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,KAAK,CAACC,IAAf,EAAqBE,kBAArB,EAAb;AACA,UAAMC,SAAS,GAAGJ,KAAK,CAACI,SAAN,GAAkB,GAAlB,GAAwB,IAA1C;AACA,wBACE;AAAI,MAAA,GAAG,EAAEJ,KAAK,CAACH,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB,GAAEI,IAAK,KAAID,KAAK,CAACK,KAAM,IAAGD,SAAU,EAAzD,CADF;AAGD,GAND,CAFJ,CATF,CADF;AAsBD;;AAED,eAAejB,KAAf","sourcesContent":["import React from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { HABITS_QUERY } from \"./App\";\r\n\r\nconst DELETE_HABIT_MUTATION = gql`\r\n  mutation DELETE_HABIT_MUTATION($id: ID!) {\r\n    deleteHabit(id: $id) {\r\n      success\r\n    }\r\n  }\r\n`\r\n\r\nfunction Habit({ habit }) {\r\n\r\n     // hooks the function\r\n  const [deleteHabit, { error, loading }] = useMutation(DELETE_HABIT_MUTATION, {\r\n    refetchQueries: [{ query: HABITS_QUERY }],\r\n  });\r\n  return (\r\n    <li>\r\n      {`${habit.description} (${habit.points} points)`}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => deleteHabit({ variables: { id: habit.id } })}\r\n        disabled={loading}\r\n      >\r\n        Delete\r\n      </button>\r\n      <ul>\r\n        {habit.entries &&\r\n          habit.entries.map((entry) => {\r\n            const date = new Date(entry.date).toLocaleDateString();\r\n            const completed = entry.completed ? \"âœ…\" : \"ðŸ˜‘\";\r\n            return (\r\n              <li key={entry.id}>{`${date}: ${entry.notes} ${completed}`}</li>\r\n            );\r\n          })}\r\n      </ul>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Habit;\r\n"]},"metadata":{},"sourceType":"module"}