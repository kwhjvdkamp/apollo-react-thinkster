{"ast":null,"code":"var _jsxFileName = \"C:\\\\HomeProjects\\\\apollo-react-thinkster\\\\habit-tracker\\\\src\\\\AddHabit.js\";\nimport React, { useRef, useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { HABITS_QUERY } from \"./App\";\nimport Error from \"./Error\";\nconst CREATE_HABIT_MUTATION = gql`\n  mutation CREATE_HABIT_MUTATION($input: NewHabitInput) {\n    createHabit(input: $input) {\n      id\n      description\n      points\n      entries {\n        id\n        notes\n        date\n        completed\n      }\n    }\n  }\n`;\n\nfunction AddHabit() {\n  // hooks to retrieve information from the text box\n  const [description, setDescription] = useState(null);\n  const descriptionInput = useRef(null); // hooks the function\n\n  const [createHabit, {\n    error,\n    loading\n  }] = useMutation(CREATE_HABIT_MUTATION, {\n    refetchQueries: [{\n      query: HABITS_QUERY\n    }]\n  });\n\n  const handleChange = () => {\n    const {\n      value\n    } = descriptionInput.current;\n    setDescription(value);\n  };\n\n  const onEnterPress = e => {\n    if (e.keyCode === 13 && description) {\n      addHabit(e);\n    }\n  };\n\n  const addHabit = e => {\n    e.preventDefault();\n    const input = {\n      description\n    };\n    createHabit({\n      variables: {\n        input\n      }\n    });\n    descriptionInput.current.value = \"\";\n    setDescription(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addHabit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Error! \", error.message), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"What are you gonna do?\",\n    name: \"description\",\n    style: {\n      width: \"200px\"\n    },\n    ref: descriptionInput,\n    onChange: handleChange,\n    onKeyDown: onEnterPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"blue-button\",\n    disabled: !description || loading,\n    onClick: addHabit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Add\", loading ? \"ing...\" : \"\"), error && /*#__PURE__*/React.createElement(Error, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default AddHabit;","map":{"version":3,"sources":["C:/HomeProjects/apollo-react-thinkster/habit-tracker/src/AddHabit.js"],"names":["React","useRef","useState","useMutation","gql","HABITS_QUERY","Error","CREATE_HABIT_MUTATION","AddHabit","description","setDescription","descriptionInput","createHabit","error","loading","refetchQueries","query","handleChange","value","current","onEnterPress","e","keyCode","addHabit","preventDefault","input","variables","message","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,qBAAqB,GAAGH,GAAI;;;;;;;;;;;;;;CAAlC;;AAgBA,SAASI,QAAT,GAAoB;AAElB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAMS,gBAAgB,GAAGV,MAAM,CAAC,IAAD,CAA/B,CAJkB,CAMlB;;AACA,QAAM,CAACW,WAAD,EAAc;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAd,IAAoCX,WAAW,CAACI,qBAAD,EAAwB;AAC3EQ,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEX;AAAT,KAAD;AAD2D,GAAxB,CAArD;;AAIA,QAAMY,YAAY,GAAG,MAAM;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAYP,gBAAgB,CAACQ,OAAnC;AACAT,IAAAA,cAAc,CAACQ,KAAD,CAAd;AACD,GAHD;;AAKA,QAAME,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIA,CAAC,CAACC,OAAF,KAAc,EAAd,IAAoBb,WAAxB,EAAqC;AACnCc,MAAAA,QAAQ,CAACF,CAAD,CAAR;AACD;AACF,GAJD;;AAMA,QAAME,QAAQ,GAAIF,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACG,cAAF;AACA,UAAMC,KAAK,GAAG;AAAEhB,MAAAA;AAAF,KAAd;AACAG,IAAAA,WAAW,CAAC;AAAEc,MAAAA,SAAS,EAAE;AAAED,QAAAA;AAAF;AAAb,KAAD,CAAX;AACAd,IAAAA,gBAAgB,CAACQ,OAAjB,CAAyBD,KAAzB,GAAiC,EAAjC;AACAR,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAND;;AAQA,sBACE;AAAM,IAAA,QAAQ,EAAEa,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWA,KAAK,CAACc,OAAjB,CADZ,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,wBAFd;AAGE,IAAA,IAAI,EAAC,aAHP;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAJT;AAKE,IAAA,GAAG,EAAEjB,gBALP;AAME,IAAA,QAAQ,EAAEM,YANZ;AAOE,IAAA,SAAS,EAAEG,YAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAWE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,QAAQ,EAAE,CAACX,WAAD,IAAgBK,OAH5B;AAIE,IAAA,OAAO,EAAES,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMMT,OAAO,GAAG,QAAH,GAAc,EAN3B,CAXF,EAmBGD,KAAK,iBAAI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBZ,CADF;AAuBD;;AAED,eAAeL,QAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { HABITS_QUERY } from \"./App\";\r\nimport Error from \"./Error\";\r\n\r\nconst CREATE_HABIT_MUTATION = gql`\r\n  mutation CREATE_HABIT_MUTATION($input: NewHabitInput) {\r\n    createHabit(input: $input) {\r\n      id\r\n      description\r\n      points\r\n      entries {\r\n        id\r\n        notes\r\n        date\r\n        completed\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction AddHabit() {\r\n\r\n  // hooks to retrieve information from the text box\r\n  const [description, setDescription] = useState(null);\r\n  const descriptionInput = useRef(null);\r\n\r\n  // hooks the function\r\n  const [createHabit, { error, loading }] = useMutation(CREATE_HABIT_MUTATION, {\r\n    refetchQueries: [{ query: HABITS_QUERY }],\r\n  });\r\n\r\n  const handleChange = () => {\r\n    const { value } = descriptionInput.current;\r\n    setDescription(value);\r\n  };\r\n\r\n  const onEnterPress = (e) => {\r\n    if (e.keyCode === 13 && description) {\r\n      addHabit(e);\r\n    }\r\n  };\r\n\r\n  const addHabit = (e) => {\r\n    e.preventDefault();\r\n    const input = { description };\r\n    createHabit({ variables: { input } });\r\n    descriptionInput.current.value = \"\";\r\n    setDescription(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addHabit}>\r\n      {error && <p>Error! {error.message}</p>}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"What are you gonna do?\"\r\n        name=\"description\"\r\n        style={{ width: \"200px\" }}\r\n        ref={descriptionInput}\r\n        onChange={handleChange}\r\n        onKeyDown={onEnterPress}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        className=\"blue-button\"\r\n        disabled={!description || loading}\r\n        onClick={addHabit}\r\n      >\r\n        Add{loading ? \"ing...\" : \"\"}\r\n      </button>\r\n      {error && <Error error={error} />}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddHabit;\r\n"]},"metadata":{},"sourceType":"module"}