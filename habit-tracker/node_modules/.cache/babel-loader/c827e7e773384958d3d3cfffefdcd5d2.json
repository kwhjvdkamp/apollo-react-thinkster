{"ast":null,"code":"var _jsxFileName = \"C:\\\\HomeProjects\\\\apollo-react-thinkster\\\\habit-tracker\\\\src\\\\App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport \"./App.css\";\nimport Loading from \"./Loading\";\nimport Error from \"./Error\";\nimport Habit from \"./Habit\";\nimport AddHabit from \"./AddHabit\";\n/**\n * Imports\n * 1) 'useQuery' is a React hook\n * 2) 'gql' a function to pass in GraphQL syntax via a tagged template literal\n * https://thinkster.io/tutorials/up-and-running-with-gatsby-styling/using-styled-components */\n\nexport const HABITS_QUERY = gql`\n  query HABITS_QUERY {\n    habits {\n      id\n      description\n      points\n      entries {\n        id\n        notes\n        date\n        completed\n      }\n    }\n\n    totalPoints {\n      points\n      totalCompletedEntries\n    }\n  }\n`;\n\nfunction App() {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(HABITS_QUERY);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const {\n    habits,\n    totalPoints\n  } = data;\n  const entryString = totalPoints.totalCompletedEntries > 1 || totalPoints.totalCompletedEntries === 0 ? \"entries\" : \"entry\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"bottom-margin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Habits\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"muscle emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDCAA\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, `Total Points: ${totalPoints.points} (${totalPoints.totalCompletedEntries} competed ${entryString})`), /*#__PURE__*/React.createElement(AddHabit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"habit-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, habits.map(habit => {\n    return /*#__PURE__*/React.createElement(Habit, {\n      key: habit.id,\n      habit: habit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 18\n      }\n    });\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/HomeProjects/apollo-react-thinkster/habit-tracker/src/App.js"],"names":["React","useQuery","gql","Loading","Error","Habit","AddHabit","HABITS_QUERY","App","data","loading","error","habits","totalPoints","entryString","totalCompletedEntries","points","map","habit","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA;;;;;;AAKA,OAAO,MAAMC,YAAY,GAAGL,GAAI;;;;;;;;;;;;;;;;;;;CAAzB;;AAqBP,SAASM,GAAT,GAAe;AACb,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BV,QAAQ,CAACM,YAAD,CAAzC;;AAEA,MAAIG,OAAJ,EAAa;AACX,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,MAAIC,KAAJ,EAAW;AACT,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA0BJ,IAAhC;AACA,QAAMK,WAAW,GACfD,WAAW,CAACE,qBAAZ,GAAoC,CAApC,IACAF,WAAW,CAACE,qBAAZ,KAAsC,CADtC,GAEI,SAFJ,GAGI,OAJN;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACS,GADT,eAEE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,iBAAgBF,WAAW,CAACG,MAAO,KAAIH,WAAW,CAACE,qBAAsB,aAAYD,WAAY,GADrG,CAPF,eAUE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,eAaE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACK,GAAP,CAAYC,KAAD,IAAW;AACrB,wBAAO,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,MAAA,KAAK,EAAED,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CAbF,CADF;AAqBD;;AAED,eAAeV,GAAf","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport \"./App.css\";\nimport Loading from \"./Loading\";\nimport Error from \"./Error\";\nimport Habit from \"./Habit\";\nimport AddHabit from \"./AddHabit\";\n/**\n * Imports\n * 1) 'useQuery' is a React hook\n * 2) 'gql' a function to pass in GraphQL syntax via a tagged template literal\n * https://thinkster.io/tutorials/up-and-running-with-gatsby-styling/using-styled-components */\nexport const HABITS_QUERY = gql`\n  query HABITS_QUERY {\n    habits {\n      id\n      description\n      points\n      entries {\n        id\n        notes\n        date\n        completed\n      }\n    }\n\n    totalPoints {\n      points\n      totalCompletedEntries\n    }\n  }\n`;\n\nfunction App() {\n  const { data, loading, error } = useQuery(HABITS_QUERY);\n\n  if (loading) {\n    return (\n      <div className=\"container\">\n        <Loading />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"container\">\n        <Error error={error} />\n      </div>\n    );\n  }\n\n  const { habits, totalPoints } = data;\n  const entryString =\n    totalPoints.totalCompletedEntries > 1 ||\n    totalPoints.totalCompletedEntries === 0\n      ? \"entries\"\n      : \"entry\";\n\n  return (\n    <div className=\"container\">\n      <div>\n        <h2 className=\"bottom-margin\">\n          Habits{\" \"}\n          <span role=\"img\" aria-label=\"muscle emoji\">\n            ðŸ’ª\n          </span>\n        </h2>\n        <p>\n          {`Total Points: ${totalPoints.points} (${totalPoints.totalCompletedEntries} competed ${entryString})`}\n        </p>\n        <AddHabit />\n      </div>\n      <ul className=\"habit-list\">\n        {habits.map((habit) => {\n          return <Habit key={habit.id} habit={habit} />;\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}