{"ast":null,"code":"var _jsxFileName = \"C:\\\\HomeProjects\\\\apollo-react-thinkster\\\\habit-tracker\\\\src\\\\Entry.js\";\nimport React from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { HABITS_QUERY } from \"./App\";\nconst DELETE_ENTRY = gql`\n  mutation DELETE_ENTRY($id: ID!) {\n    deleteEntry(id: $id) {\n      success\n    }\n  }\n`;\nexport default function Entry({\n  entry,\n  lastEntry,\n  showEntryForm\n}) {\n  const [deleteEntry, {\n    error,\n    loading\n  }] = useMutation(DELETE_ENTRY, {\n    refetchQueries: [{\n      query: HABITS_QUERY\n    }],\n    awaitRefetchQueries: true\n  });\n  const date = new Date(entry.date).toLocaleDateString();\n  const completed = entry.completed ? \"‚úÖ\" : \"üòë\";\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: entry.id,\n    style: {\n      margin: \"5px 0\",\n      color: error ? \"red\" : \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"warn emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"\\u26A0\\uFE0F\"), \" \"), `${date}: ${entry.notes} ${completed}`, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"emoji-button\",\n    alt: \"Delete entry\",\n    disabled: loading,\n    onClick: () => deleteEntry({\n      variables: {\n        id: entry.id\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"trash can\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDDD1\")), lastEntry && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"emoji-button\",\n    alt: \"Add new entry\",\n    onClick: showEntryForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"\\u2795\")));\n}","map":{"version":3,"sources":["C:/HomeProjects/apollo-react-thinkster/habit-tracker/src/Entry.js"],"names":["React","useMutation","gql","HABITS_QUERY","DELETE_ENTRY","Entry","entry","lastEntry","showEntryForm","deleteEntry","error","loading","refetchQueries","query","awaitRefetchQueries","date","Date","toLocaleDateString","completed","id","margin","color","notes","variables"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;AACA,SAASC,YAAT,QAA6B,OAA7B;AAEA,MAAMC,YAAY,GAAGF,GAAI;;;;;;CAAzB;AAQA,eAAe,SAASG,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAf,EAAoD;AACjE,QAAM,CAACC,WAAD,EAAc;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAd,IAAoCV,WAAW,CAACG,YAAD,EAAe;AAClEQ,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEV;AAAT,KAAD,CADkD;AAElEW,IAAAA,mBAAmB,EAAE;AAF6C,GAAf,CAArD;AAIA,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASV,KAAK,CAACS,IAAf,EAAqBE,kBAArB,EAAb;AACA,QAAMC,SAAS,GAAGZ,KAAK,CAACY,SAAN,GAAkB,GAAlB,GAAwB,IAA1C;AAEA,sBACE;AACE,IAAA,GAAG,EAAEZ,KAAK,CAACa,EADb;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAEX,KAAK,GAAG,KAAH,GAAW;AAA1C,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGA,KAAK,iBACJ,uDACE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAGU,GAHV,CALJ,EAWI,GAAEK,IAAK,KAAIT,KAAK,CAACgB,KAAM,IAAGJ,SAAU,EAXxC,eAYE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,GAAG,EAAC,cAHN;AAIE,IAAA,QAAQ,EAAEP,OAJZ;AAKE,IAAA,OAAO,EAAE,MAAMF,WAAW,CAAC;AAAEc,MAAAA,SAAS,EAAE;AAAEJ,QAAAA,EAAE,EAAEb,KAAK,CAACa;AAAZ;AAAb,KAAD,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,CAZF,EAuBGZ,SAAS,iBACR;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,GAAG,EAAC,eAHN;AAIE,IAAA,OAAO,EAAEC,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CAxBJ,CADF;AAsCD","sourcesContent":["import React from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { HABITS_QUERY } from \"./App\";\r\n\r\nconst DELETE_ENTRY = gql`\r\n  mutation DELETE_ENTRY($id: ID!) {\r\n    deleteEntry(id: $id) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Entry({ entry, lastEntry, showEntryForm }) {\r\n  const [deleteEntry, { error, loading }] = useMutation(DELETE_ENTRY, {\r\n    refetchQueries: [{ query: HABITS_QUERY }],\r\n    awaitRefetchQueries: true,\r\n  });\r\n  const date = new Date(entry.date).toLocaleDateString();\r\n  const completed = entry.completed ? \"‚úÖ\" : \"üòë\";\r\n\r\n  return (\r\n    <li\r\n      key={entry.id}\r\n      style={{ margin: \"5px 0\", color: error ? \"red\" : \"black\" }}\r\n    >\r\n      {error && (\r\n        <>\r\n          <span role=\"img\" aria-label=\"warn emoji\">\r\n            ‚ö†Ô∏è\r\n          </span>{\" \"}\r\n        </>\r\n      )}\r\n      {`${date}: ${entry.notes} ${completed}`}\r\n      <button\r\n        type=\"button\"\r\n        className=\"emoji-button\"\r\n        alt=\"Delete entry\"\r\n        disabled={loading}\r\n        onClick={() => deleteEntry({ variables: { id: entry.id } })}\r\n      >\r\n        <span role=\"img\" aria-label=\"trash can\">\r\n          üóë\r\n        </span>\r\n      </button>\r\n      {lastEntry && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"emoji-button\"\r\n          alt=\"Add new entry\"\r\n          onClick={showEntryForm}\r\n        >\r\n          <span role=\"img\" aria-label=\"plus\">\r\n            ‚ûï\r\n          </span>\r\n        </button>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}