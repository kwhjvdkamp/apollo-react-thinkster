{"ast":null,"code":"var _jsxFileName = \"C:\\\\HomeProjects\\\\apollo-react-thinkster\\\\habit-tracker\\\\src\\\\App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useQuery, gql } from \"@apollo/client\";\n/**\n * Imports\n * 1) 'useQuery' is a React hook\n * 2) 'gql' a function to pass in GraphQL syntax via a tagged template literal\n * https://thinkster.io/tutorials/up-and-running-with-gatsby-styling/using-styled-components */\n\nconst HABITS_QUERY = gql`\n  query HABITS_QUERY {\n    habits {\n      id\n      description\n      points\n    }\n  }\n`;\n\nfunction App() {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(HABITS_QUERY);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }\n    }, \"loading...\");\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }\n    }, \"Ruh roh! \", error.message);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Habits\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, data.habits.map(habit => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: habit.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, habit.description, \" (\", habit.po, \")\");\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/HomeProjects/apollo-react-thinkster/habit-tracker/src/App.js"],"names":["React","useQuery","gql","HABITS_QUERY","App","data","loading","error","message","habits","map","habit","id","description","po"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AAEA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAGA;;;;;;AAKA,MAAMC,YAAY,GAAGD,GAAI;;;;;;;;CAAzB;;AAUA,SAASE,GAAT,GAAe;AACX,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BN,QAAQ,CAACE,YAAD,CAAzC;;AAEA,MAAIG,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACC,OAAnB,CAAP;AACD;;AAED,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACI,MAAL,CAAYC,GAAZ,CAAiBC,KAAD,IAAW;AAC1B,wBACE;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBD,KAAK,CAACE,WAA1B,QAAyCF,KAAK,CAACG,EAA/C,MADF;AAGD,GAJA,CADH,CAFF,CADF;AAYD;;AAEH,eAAeV,GAAf","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { useQuery, gql } from \"@apollo/client\";\n\n\n/**\n * Imports\n * 1) 'useQuery' is a React hook\n * 2) 'gql' a function to pass in GraphQL syntax via a tagged template literal\n * https://thinkster.io/tutorials/up-and-running-with-gatsby-styling/using-styled-components */\nconst HABITS_QUERY = gql`\n  query HABITS_QUERY {\n    habits {\n      id\n      description\n      points\n    }\n  }\n`;\n\nfunction App() {\n    const { data, loading, error } = useQuery(HABITS_QUERY);\n\n    if (loading) {\n      return <p>loading...</p>;\n    }\n\n    if (error) {\n      return <p>Ruh roh! {error.message}</p>;\n    }\n\n    return (\n      <>\n        <h2>Habits</h2>\n        <ul>\n          {data.habits.map((habit) => {\n            return (\n              <li key={habit.id}>{habit.description} ({habit.po})</li>\n            );\n          })}\n        </ul>\n      </>\n    );\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}