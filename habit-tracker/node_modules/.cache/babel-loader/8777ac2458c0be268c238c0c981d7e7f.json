{"ast":null,"code":"var _jsxFileName = \"C:\\\\HomeProjects\\\\apollo-react-thinkster\\\\habit-tracker\\\\src\\\\EditHabit.js\";\nimport React, { useRef, useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { HABITS_QUERY } from \"./App\";\nimport Error from \"./Error\";\nimport { useEscFn } from \"./helpers/useEscFn\";\nconst UPDATE_HABIT_MUTATION = gql`\n  mutation UPDATE_HABIT_MUTATION($input: UpdateHabitInput) {\n    updateHabit(input: $input) {\n      id\n      description\n      points\n      entries {\n        id\n        notes\n        date\n        completed\n      }\n    }\n  }\n`;\n\nfunction EditHabit({\n  habit,\n  onEditSuccess\n}) {\n  const [description, setDescription] = useState(habit.description);\n  const descriptionInput = useRef(null);\n  const [updateHabit, {\n    error,\n    loading\n  }] = useMutation(UPDATE_HABIT_MUTATION, {\n    refetchQueries: [{\n      query: HABITS_QUERY\n    }],\n    awaitRefetchQueries: true\n  });\n  useEscFn(onEditSuccess);\n\n  const handleChange = () => {\n    const {\n      value\n    } = descriptionInput.current;\n    setDescription(value);\n  };\n\n  const editHabit = e => {\n    e.preventDefault();\n\n    if (habit.description === description) {\n      onEditSuccess();\n      return;\n    }\n\n    const input = {\n      id: habit.id,\n      description\n    };\n    updateHabit({\n      variables: {\n        input\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: editHabit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    defaultValue: description,\n    style: {\n      width: \"200px\"\n    },\n    name: \"description\",\n    ref: descriptionInput,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"red-button\",\n    onClick: onEditSuccess,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"blue-button\",\n    disabled: !description || loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Sav\", loading ? \"ing...\" : \"e\"), error && /*#__PURE__*/React.createElement(Error, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default EditHabit;","map":{"version":3,"sources":["C:/HomeProjects/apollo-react-thinkster/habit-tracker/src/EditHabit.js"],"names":["React","useRef","useState","useMutation","gql","HABITS_QUERY","Error","useEscFn","UPDATE_HABIT_MUTATION","EditHabit","habit","onEditSuccess","description","setDescription","descriptionInput","updateHabit","error","loading","refetchQueries","query","awaitRefetchQueries","handleChange","value","current","editHabit","e","preventDefault","input","id","variables","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,MAAMC,qBAAqB,GAAGJ,GAAI;;;;;;;;;;;;;;CAAlC;;AAgBA,SAASK,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAnB,EAA6C;AAC3C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAACQ,KAAK,CAACE,WAAP,CAA9C;AACA,QAAME,gBAAgB,GAAGb,MAAM,CAAC,IAAD,CAA/B;AACA,QAAM,CAACc,WAAD,EAAc;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAd,IAAoCd,WAAW,CAACK,qBAAD,EAAwB;AAC3EU,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEd;AAAT,KAAD,CAD2D;AAE3Ee,IAAAA,mBAAmB,EAAE;AAFsD,GAAxB,CAArD;AAIAb,EAAAA,QAAQ,CAACI,aAAD,CAAR;;AAEA,QAAMU,YAAY,GAAG,MAAM;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAYR,gBAAgB,CAACS,OAAnC;AACAV,IAAAA,cAAc,CAACS,KAAD,CAAd;AACD,GAHD;;AAKA,QAAME,SAAS,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIhB,KAAK,CAACE,WAAN,KAAsBA,WAA1B,EAAuC;AACrCD,MAAAA,aAAa;AACb;AACD;;AACD,UAAMgB,KAAK,GAAG;AAAEC,MAAAA,EAAE,EAAElB,KAAK,CAACkB,EAAZ;AAAgBhB,MAAAA;AAAhB,KAAd;AACAG,IAAAA,WAAW,CAAC;AAAEc,MAAAA,SAAS,EAAE;AAAEF,QAAAA;AAAF;AAAb,KAAD,CAAX;AACD,GARD;;AAUA,sBACE;AAAM,IAAA,QAAQ,EAAEH,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,YAAY,EAAEZ,WAFhB;AAGE,IAAA,KAAK,EAAE;AAAEkB,MAAAA,KAAK,EAAE;AAAT,KAHT;AAIE,IAAA,IAAI,EAAC,aAJP;AAKE,IAAA,GAAG,EAAEhB,gBALP;AAME,IAAA,QAAQ,EAAEO,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,YAFZ;AAGE,IAAA,OAAO,EAAEV,aAHX;AAIE,IAAA,QAAQ,EAAEM,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,QAAQ,EAAE,CAACL,WAAD,IAAgBK,OAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAKMA,OAAO,GAAG,QAAH,GAAc,GAL3B,CAjBF,EAwBGD,KAAK,iBAAI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBZ,CADF;AA4BD;;AAED,eAAeP,SAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { HABITS_QUERY } from \"./App\";\r\nimport Error from \"./Error\";\r\nimport { useEscFn } from \"./helpers/useEscFn\";\r\n\r\nconst UPDATE_HABIT_MUTATION = gql`\r\n  mutation UPDATE_HABIT_MUTATION($input: UpdateHabitInput) {\r\n    updateHabit(input: $input) {\r\n      id\r\n      description\r\n      points\r\n      entries {\r\n        id\r\n        notes\r\n        date\r\n        completed\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction EditHabit({ habit, onEditSuccess }) {\r\n  const [description, setDescription] = useState(habit.description);\r\n  const descriptionInput = useRef(null);\r\n  const [updateHabit, { error, loading }] = useMutation(UPDATE_HABIT_MUTATION, {\r\n    refetchQueries: [{ query: HABITS_QUERY }],\r\n    awaitRefetchQueries: true,\r\n  });\r\n  useEscFn(onEditSuccess);\r\n\r\n  const handleChange = () => {\r\n    const { value } = descriptionInput.current;\r\n    setDescription(value);\r\n  };\r\n\r\n  const editHabit = (e) => {\r\n    e.preventDefault();\r\n    if (habit.description === description) {\r\n      onEditSuccess();\r\n      return;\r\n    }\r\n    const input = { id: habit.id, description };\r\n    updateHabit({ variables: { input } });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={editHabit}>\r\n      <input\r\n        type=\"text\"\r\n        defaultValue={description}\r\n        style={{ width: \"200px\" }}\r\n        name=\"description\"\r\n        ref={descriptionInput}\r\n        onChange={handleChange}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        className=\"red-button\"\r\n        onClick={onEditSuccess}\r\n        disabled={loading}\r\n      >\r\n        Cancel\r\n      </button>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"blue-button\"\r\n        disabled={!description || loading}\r\n      >\r\n        Sav{loading ? \"ing...\" : \"e\"}\r\n      </button>\r\n      {error && <Error error={error} />}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default EditHabit;\r\n"]},"metadata":{},"sourceType":"module"}