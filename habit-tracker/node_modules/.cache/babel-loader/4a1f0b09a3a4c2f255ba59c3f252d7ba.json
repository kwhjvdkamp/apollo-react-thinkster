{"ast":null,"code":"var _jsxFileName = \"C:\\\\HomeProjects\\\\apollo-react-thinkster\\\\habit-tracker\\\\src\\\\AddHabit.js\";\nimport React, { useRef, useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { HABITS_QUERY } from \"./App\";\nimport Error from \"./Error\";\nimport { HABIT_FIELDS } from \"./helpers/fragments\";\nconst CREATE_HABIT_MUTATION = gql`\n  mutation CREATE_HABIT_MUTATION($input: NewHabitInput) {\n    createHabit(input: $input) {\n      ...HabitFields\n    }\n  }\n  ${HABIT_FIELDS}\n`;\n\nfunction AddHabit() {\n  const [description, setDescription] = useState(null);\n  const descriptionInput = useRef(null);\n  const [createHabit, {\n    error,\n    loading\n  }] = useMutation(CREATE_HABIT_MUTATION, {\n    update: (cache, {\n      data: {\n        createHabit\n      }\n    }) => {\n      // read data from cache\n      const {\n        habits\n      } = cache.readQuery({\n        query: HABITS_QUERY\n      }); // update the cache with new data\n\n      cache.writeQuery({\n        query: HABITS_QUERY,\n        data: {\n          habits: habits.concat([createHabit])\n        }\n      });\n    }\n  });\n\n  const handleChange = () => {\n    const {\n      value\n    } = descriptionInput.current;\n    setDescription(value);\n  };\n\n  const addHabit = e => {\n    e.preventDefault();\n    const input = {\n      description\n    };\n    createHabit({\n      variables: {\n        input\n      }\n    });\n    descriptionInput.current.value = \"\";\n    setDescription(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addHabit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"What are you gonna do?\",\n    name: \"description\",\n    style: {\n      width: \"200px\"\n    },\n    ref: descriptionInput,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"blue-button\",\n    disabled: !description || loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Add\", loading ? \"ing...\" : \"\"), error && /*#__PURE__*/React.createElement(Error, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default AddHabit;","map":{"version":3,"sources":["C:/HomeProjects/apollo-react-thinkster/habit-tracker/src/AddHabit.js"],"names":["React","useRef","useState","useMutation","gql","HABITS_QUERY","Error","HABIT_FIELDS","CREATE_HABIT_MUTATION","AddHabit","description","setDescription","descriptionInput","createHabit","error","loading","update","cache","data","habits","readQuery","query","writeQuery","concat","handleChange","value","current","addHabit","e","preventDefault","input","variables","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,MAAMC,qBAAqB,GAAGJ,GAAI;;;;;;IAM9BG,YAAa;CANjB;;AASA,SAASE,QAAT,GAAoB;AAClB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAMU,gBAAgB,GAAGX,MAAM,CAAC,IAAD,CAA/B;AACA,QAAM,CAACY,WAAD,EAAc;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAd,IAAoCZ,WAAW,CAACK,qBAAD,EAAwB;AAC3EQ,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA,IAAI,EAAE;AAAEL,QAAAA;AAAF;AAAR,KAAR,KAAsC;AAC5C;AACA,YAAM;AAAEM,QAAAA;AAAF,UAAaF,KAAK,CAACG,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEhB;AAAT,OAAhB,CAAnB,CAF4C,CAG5C;;AACAY,MAAAA,KAAK,CAACK,UAAN,CAAiB;AACfD,QAAAA,KAAK,EAAEhB,YADQ;AAEfa,QAAAA,IAAI,EAAE;AAAEC,UAAAA,MAAM,EAAEA,MAAM,CAACI,MAAP,CAAc,CAACV,WAAD,CAAd;AAAV;AAFS,OAAjB;AAID;AAT0E,GAAxB,CAArD;;AAYA,QAAMW,YAAY,GAAG,MAAM;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAYb,gBAAgB,CAACc,OAAnC;AACAf,IAAAA,cAAc,CAACc,KAAD,CAAd;AACD,GAHD;;AAKA,QAAME,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,KAAK,GAAG;AAAEpB,MAAAA;AAAF,KAAd;AACAG,IAAAA,WAAW,CAAC;AAAEkB,MAAAA,SAAS,EAAE;AAAED,QAAAA;AAAF;AAAb,KAAD,CAAX;AACAlB,IAAAA,gBAAgB,CAACc,OAAjB,CAAyBD,KAAzB,GAAiC,EAAjC;AACAd,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAND;;AAQA,sBACE;AAAM,IAAA,QAAQ,EAAEgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,wBAFd;AAGE,IAAA,IAAI,EAAC,aAHP;AAIE,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAT,KAJT;AAKE,IAAA,GAAG,EAAEpB,gBALP;AAME,IAAA,QAAQ,EAAEY,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,QAAQ,EAAE,CAACd,WAAD,IAAgBK,OAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAKMA,OAAO,GAAG,QAAH,GAAc,EAL3B,CATF,EAgBGD,KAAK,iBAAI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBZ,CADF;AAoBD;;AAED,eAAeL,QAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { HABITS_QUERY } from \"./App\";\r\nimport Error from \"./Error\";\r\nimport { HABIT_FIELDS } from \"./helpers/fragments\";\r\n\r\nconst CREATE_HABIT_MUTATION = gql`\r\n  mutation CREATE_HABIT_MUTATION($input: NewHabitInput) {\r\n    createHabit(input: $input) {\r\n      ...HabitFields\r\n    }\r\n  }\r\n  ${HABIT_FIELDS}\r\n`;\r\n\r\nfunction AddHabit() {\r\n  const [description, setDescription] = useState(null);\r\n  const descriptionInput = useRef(null);\r\n  const [createHabit, { error, loading }] = useMutation(CREATE_HABIT_MUTATION, {\r\n    update: (cache, { data: { createHabit } }) => {\r\n      // read data from cache\r\n      const { habits } = cache.readQuery({ query: HABITS_QUERY });\r\n      // update the cache with new data\r\n      cache.writeQuery({\r\n        query: HABITS_QUERY,\r\n        data: { habits: habits.concat([createHabit]) },\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleChange = () => {\r\n    const { value } = descriptionInput.current;\r\n    setDescription(value);\r\n  };\r\n\r\n  const addHabit = (e) => {\r\n    e.preventDefault();\r\n    const input = { description };\r\n    createHabit({ variables: { input } });\r\n    descriptionInput.current.value = \"\";\r\n    setDescription(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addHabit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"What are you gonna do?\"\r\n        name=\"description\"\r\n        style={{ width: \"200px\" }}\r\n        ref={descriptionInput}\r\n        onChange={handleChange}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        className=\"blue-button\"\r\n        disabled={!description || loading}\r\n      >\r\n        Add{loading ? \"ing...\" : \"\"}\r\n      </button>\r\n      {error && <Error error={error} />}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddHabit;\r\n"]},"metadata":{},"sourceType":"module"}