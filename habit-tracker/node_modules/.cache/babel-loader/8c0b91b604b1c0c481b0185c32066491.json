{"ast":null,"code":"var _jsxFileName = \"C:\\\\HomeProjects\\\\apollo-react-thinkster\\\\habit-tracker\\\\src\\\\Habit.js\";\nimport React, { useState } from \"react\";\nimport { useMutation, gql, useLazyQuery } from \"@apollo/client\";\nimport { HABITS_QUERY } from \"./App\";\nimport EditHabit from \"./EditHabit\";\nimport Entry from \"./Entry\";\nimport AddEntry from \"./AddEntry\";\nimport { ENTRY_FIELDS } from \"./helpers/fragments\";\nconst DELETE_HABIT = gql`\n  mutation DELETE_HABIT($id: ID!) {\n    deleteHabit(id: $id) {\n      success\n    }\n  }\n`;\nexport const ENTRIES_QUERY = gql`\n  query ENTRIES_QUERY($id: ID!) {\n    getEntriesByHabitId(id: $id) {\n      ...EntryFields\n    }\n  }\n  ${ENTRY_FIELDS}\n`;\n\nfunction Habit({\n  habit\n}) {\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [showAddEntryForm, setShowAddEntryForm] = useState(false);\n  const [deleteHabit, {\n    error,\n    loading\n  }] = useMutation(DELETE_HABIT);\n  const [loadEntries, {\n    data: entriesData\n  }] = useLazyQuery(ENTRIES_QUERY);\n  const entries = entriesData && entriesData.getEntriesByHabitId ? entriesData.getEntriesByHabitId : [];\n  return /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      color: error ? \"red\" : \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"warn emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"\\u26A0\\uFE0F\"), \" \"), !showEditForm ? /*#__PURE__*/React.createElement(React.Fragment, null, habit.description, \" (\", habit.points, \" points)\", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"emoji-button\",\n    type: \"button\",\n    onClick: () => setShowEditForm(true),\n    alt: \"Edit habit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"pencil emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"\\u270F\\uFE0F\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"blue-button\",\n    onClick: () => {\n      const habitIdToDelete = habit.id;\n      deleteHabit({\n        variables: {\n          id: habitIdToDelete\n        },\n        update: (cache, {\n          data\n        }) => {\n          const {\n            habits\n          } = cache.readQuery({\n            query: HABITS_QUERY\n          });\n          cache.writeQuery({\n            query: HABITS_QUERY,\n            data: {\n              habits: habits.filter(habit => habit.id !== habitIdToDelete)\n            }\n          });\n        }\n      });\n    },\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"blue-button\",\n    onClick: () => loadEntries({\n      variables: {\n        id: habit.id\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Entries\")) : /*#__PURE__*/React.createElement(EditHabit, {\n    habit: habit,\n    onEditSuccess: () => setShowEditForm(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), entries.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, entries.map(entry => {\n    const lastEntry = entries.indexOf(entry) === entries.length - 1;\n    return /*#__PURE__*/React.createElement(Entry, {\n      key: entry.id,\n      entry: entry,\n      lastEntry: lastEntry,\n      showEntryForm: () => setShowAddEntryForm(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    });\n  })), entries.length === 0 && !showAddEntryForm && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"blue-button\",\n    style: {\n      display: \"block\"\n    },\n    onClick: () => setShowAddEntryForm(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"Add Entry\"), /*#__PURE__*/React.createElement(AddEntry, {\n    show: showAddEntryForm,\n    habitId: habit.id,\n    onAddEntrySuccess: () => setShowAddEntryForm(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Habit;","map":{"version":3,"sources":["C:/HomeProjects/apollo-react-thinkster/habit-tracker/src/Habit.js"],"names":["React","useState","useMutation","gql","useLazyQuery","HABITS_QUERY","EditHabit","Entry","AddEntry","ENTRY_FIELDS","DELETE_HABIT","ENTRIES_QUERY","Habit","habit","showEditForm","setShowEditForm","showAddEntryForm","setShowAddEntryForm","deleteHabit","error","loading","loadEntries","data","entriesData","entries","getEntriesByHabitId","color","description","points","habitIdToDelete","id","variables","update","cache","habits","readQuery","query","writeQuery","filter","length","map","entry","lastEntry","indexOf","display"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useMutation, gql, useLazyQuery } from \"@apollo/client\";\r\nimport { HABITS_QUERY } from \"./App\";\r\nimport EditHabit from \"./EditHabit\";\r\nimport Entry from \"./Entry\";\r\nimport AddEntry from \"./AddEntry\";\r\nimport { ENTRY_FIELDS } from \"./helpers/fragments\";\r\n\r\nconst DELETE_HABIT = gql`\r\n  mutation DELETE_HABIT($id: ID!) {\r\n    deleteHabit(id: $id) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ENTRIES_QUERY = gql`\r\n  query ENTRIES_QUERY($id: ID!) {\r\n    getEntriesByHabitId(id: $id) {\r\n      ...EntryFields\r\n    }\r\n  }\r\n  ${ENTRY_FIELDS}\r\n`;\r\n\r\nfunction Habit({ habit }) {\r\n  const [showEditForm, setShowEditForm] = useState(false);\r\n  const [showAddEntryForm, setShowAddEntryForm] = useState(false);\r\n  const [deleteHabit, { error, loading }] = useMutation(DELETE_HABIT);\r\n  const [loadEntries, { data: entriesData }] = useLazyQuery(ENTRIES_QUERY);\r\n\r\n  const entries =\r\n    entriesData && entriesData.getEntriesByHabitId\r\n      ? entriesData.getEntriesByHabitId\r\n      : [];\r\n\r\n  return (\r\n    <li style={{ color: error ? \"red\" : \"black\" }}>\r\n      {error && (\r\n        <>\r\n          <span role=\"img\" aria-label=\"warn emoji\">\r\n            ⚠️\r\n          </span>{\" \"}\r\n        </>\r\n      )}\r\n      {!showEditForm ? (\r\n        <>\r\n          {habit.description} ({habit.points} points)\r\n          <button\r\n            className=\"emoji-button\"\r\n            type=\"button\"\r\n            onClick={() => setShowEditForm(true)}\r\n            alt=\"Edit habit\"\r\n          >\r\n            <span role=\"img\" aria-label=\"pencil emoji\">\r\n              ✏️\r\n            </span>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"blue-button\"\r\n            onClick={() => {\r\n              const habitIdToDelete = habit.id;\r\n              deleteHabit({\r\n                variables: { id: habitIdToDelete },\r\n                update: (cache, { data }) => {\r\n                  const { habits } = cache.readQuery({ query: HABITS_QUERY });\r\n                  cache.writeQuery({\r\n                    query: HABITS_QUERY,\r\n                    data: {\r\n                      habits: habits.filter(\r\n                        (habit) => habit.id !== habitIdToDelete\r\n                      ),\r\n                    },\r\n                  });\r\n                },\r\n              });\r\n            }}\r\n            disabled={loading}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"blue-button\"\r\n            onClick={() => loadEntries({ variables: { id: habit.id } })}\r\n          >\r\n            Entries\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <EditHabit habit={habit} onEditSuccess={() => setShowEditForm(false)} />\r\n      )}\r\n      {entries.length > 0 && (\r\n        <ul>\r\n          {entries.map((entry) => {\r\n            const lastEntry = entries.indexOf(entry) === entries.length - 1;\r\n            return (\r\n              <Entry\r\n                key={entry.id}\r\n                entry={entry}\r\n                lastEntry={lastEntry}\r\n                showEntryForm={() => setShowAddEntryForm(true)}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n      {entries.length === 0 && !showAddEntryForm && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"blue-button\"\r\n          style={{ display: \"block\" }}\r\n          onClick={() => setShowAddEntryForm(true)}\r\n        >\r\n          Add Entry\r\n        </button>\r\n      )}\r\n      <AddEntry\r\n        show={showAddEntryForm}\r\n        habitId={habit.id}\r\n        onAddEntrySuccess={() => setShowAddEntryForm(false)}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Habit;\r\n"]},"metadata":{},"sourceType":"module"}